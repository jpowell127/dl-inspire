// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<UserProjects /> renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UserProjects
    userId={1}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <ModalContent>
          <Dimmer
            active={true}
          >
            <Loader
              size="medium"
            >
              Loading...
            </Loader>
          </Dimmer>
        </ModalContent>,
        false,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Dimmer
            active={true}
          >
            <Loader
              size="medium"
            >
              Loading...
            </Loader>
          </Dimmer>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "active": true,
            "children": <Loader
              size="medium"
            >
              Loading...
            </Loader>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Loading...",
              "size": "medium",
            },
            "ref": null,
            "rendered": "Loading...",
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      false,
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ModalContent>
            <Dimmer
              active={true}
            >
              <Loader
                size="medium"
              >
                Loading...
              </Loader>
            </Dimmer>
          </ModalContent>,
          false,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Dimmer
              active={true}
            >
              <Loader
                size="medium"
              >
                Loading...
              </Loader>
            </Dimmer>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "active": true,
              "children": <Loader
                size="medium"
              >
                Loading...
              </Loader>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Loading...",
                "size": "medium",
              },
              "ref": null,
              "rendered": "Loading...",
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        false,
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
